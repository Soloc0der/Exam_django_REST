openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/categoryes/:
    get:
      operationId: listCategorys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/category/{id}/:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/products/:
    get:
      operationId: listProducts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    post:
      operationId: createProduct
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/v1/products/{id}/:
    get:
      operationId: retrieveProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    put:
      operationId: updateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/brands/:
    get:
      operationId: listBrands
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
      tags:
      - api
    post:
      operationId: createBrand
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
      tags:
      - api
  /api/v1/brand/{id}/:
    get:
      operationId: retrieveBrand
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this brand.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
      tags:
      - api
    put:
      operationId: updateBrand
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this brand.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBrand
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this brand.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBrand
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this brand.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    Category:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - title
      - slug
    Product:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        desc:
          type: string
          nullable: true
        image:
          type: string
          format: binary
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        category:
          type: integer
        brand_id:
          type: integer
        cat:
          type: string
          readOnly: true
      required:
      - title
      - image
      - price
      - category
      - brand_id
    Brand:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
      required:
      - title
